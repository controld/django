Quick install guide
===================

Before you can use Django, you'll need to get it installed. We have a
:doc:`complete installation guide </topics/install>` that covers all the
possibilities; this guide will guide you to a simple, minimal installation
that'll work while you walk through the introduction.

Install Python (Windows users: see below)
--------------

Being a Python Web framework, Django requires Python. It works with any Python
version from 2.6.5 to 2.7 (due to backwards incompatibilities in Python 3.0,
Django does not currently work with Python 3.0; see :doc:`the Django FAQ
</faq/install>` for more information on supported Python versions and the 3.0
transition), these versions of Python include a lightweight database called
SQLite_ so you won't need to set up a database just yet.

.. _sqlite: http://sqlite.org/

Get Python at http://www.python.org. If you're running Linux or Mac OS X, you
probably already have it installed.

.. admonition:: Django on Jython

    If you use Jython_ (a Python implementation for the Java platform), you'll
    need to follow a few additional steps. See :doc:`/howto/jython` for details.

.. _jython: http://www.jython.org/

You can verify that Python is installed by typing ``python`` from your shell;
you should see something like::

    Python 2.6.6 (r266:84292, Dec 26 2010, 22:31:48)
    [GCC 4.4.5] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>>

Set up a database
-----------------

This step is only necessary if you'd like to work with a "large" database engine
like PostgreSQL, MySQL, or Oracle. To install such a database, consult the
:ref:`database installation information <database-installation>`.

Remove any old versions of Django
---------------------------------

If you are upgrading your installation of Django from a previous version, you
will need to :ref:`uninstall the old Django version before installing the new
version <removing-old-versions-of-django>`.

Install Django
--------------

You've got three easy options to install Django:

* Install a version of Django :doc:`provided by your operating system
  distribution </misc/distributions>`. This is the quickest option for those
  who have operating systems that distribute Django.

* :ref:`Install an official release <installing-official-release>`. This
  is the best approach for users who want a stable version number and aren't
  concerned about running a slightly older version of Django.

* :ref:`Install the latest development version
  <installing-development-version>`. This is best for users who want the
  latest-and-greatest features and aren't afraid of running brand-new code.

.. admonition:: Always refer to the documentation that corresponds to the
    version of Django you're using!

    If you do either of the first two steps, keep an eye out for parts of the
    documentation marked **new in development version**. That phrase flags
    features that are only available in development versions of Django, and
    they likely won't work with an official release.


Verifying
---------

To verify that Django can be seen by Python, type ``python`` from your shell.
Then at the Python prompt, try to import Django::

    >>> import django
    >>> print(django.get_version())
    1.5

You may have another version of Django installed.

Windows Install
---------------
First, open a command prompt (we will be doing this multiple times, so make a note of how to do this!)

* On Windows Vista or Windows 7: click on the Start menu (the Windows logo in the lower left of the screen), type cmd into the Search field directly above the Start menu button, and click on "cmd" in the search results above the Search field.
* On Windows XP: click on the Start menu (the Windows logo in the lower left of the screen), click on "Run...", type cmd into the text box, and hit enter. 

(insert copyright notice - Asheesh has details)
First, to determine if you already have a working version of Python, type the following and 
press enter from the Windows command prompt::

  python --version

If the response is 'is not recognized as an internal or external command...' then continue the install for Python.
If the response is a point release other than 2.5, 2.6 or 2.7, uninstall that version of Python and continue the
install below.

* From the Python download page (http://python.org/download/), click on "Python 2.7.3 Windows Installer" (*not* the Python
  version 3 installer) and save the file in the folder of your choosing and double-click on it to start the installer.
  Follow the installer instructions to completion.


You now have what's called a command prompt. This command prompt is another way of navigating your computer and running programs -- just textually instead of graphically. We are going to be running Python and Python scripts from this command prompt.

* At this C:\\ prompt, test your Python install by typing::

    \Python27\python.exe

and pressing enter. You should see something like this::

    C:\Users\mark>\Python27\python.exe
    Python 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win32
    Type "help", "copyright", "credits" or "license" for more information.
    >>>

You just started Python! The >>> indicates that you are at a new type of prompt -- a Python prompt. The command prompt let's you navigate your computer and run programs, and the Python prompt lets you write and run Python code interactively.
To exit the Python prompt, type::

    exit()

Put Python on the PATH
======================

You might have noticed that you typed a "full path" to the Python application above when launching Python (python.exe is the application, but we typed \Python27\python.exe). In this step, you will configure your computer so that you can run Python without typing the Python27 directory name. 

Get to System Properties

1. Open up "My Computer" by clicking on the Start menu or the Windows logo in the lower-left hand corner, and navigate to "My Computer" (for Windows XP) or "Computer" (For Vista and Windows 7).
2. Right-click on the empty space in the window, and choose Properties. 

If you're using XP a window labeled "System Properties" will pop up.

  * Click the "Advanced" tab. 

If you're not using XP, a window labeled "View basic information about your computer" will appear.

  * In this window, click "Advanced system settings" 

A window with the title "System Properties" will appear.

Edit the Path
=============

1. Within System Properties, make sure you are in the tab labeled "Advanced".
2. Click the button labeled "Environment Variables".

  * A window labeled "Environment Variables" will appear.

3. In this window, the screen is split between "User variables" and "System variables". Within "System variables", scroll down and find the one labeled Path. Click the "Edit..." button.

  * A window with the "Variable name" and the "Variable value" should appear. The "Variable value" will already have some text in it; click in the box to unhighlight it (we don't want to accidentally delete that text). 

4. In the "Variable value" box, scroll to the end. Add the following text, and hit OK.
Make sure to include the semicolon at the start!::

    ;c:\python27\;c:\python27\scripts

5. Press "OK" to close out the system properties window.

6. Test your change:

  * Open up a new command prompt: you do this the same way you did above when installing python. This needs to be a new command prompt because the changes you just made didn't take affect in prompts that were already open.
  * Type python into the command prompt to start Python
  * Notice that you now get a Python interpreter, indicated by the change to a >>> prompt.
  * Exit the Python prompt by typing::

      exit()

     and press enter. Now you're back at the Windows command prompt (C:\\). 

Success!

You have Python installed and configured. 

Text Editor
===========

On Windows, we suggest the Notepad++ text editor. It is actually unrelated to the Windows default program called Notepad.

To install it:

  - Click and download the Windows installer from http://notepad-plus-plus.org/download/v6.1.5.html
  - Run the installer, and follow the process to the end. 

To run it:

  - In Windows Vista or Windows 7, click on the Start menu, type Notepad++ in the Search Field, and hit enter.
  - In Windows XP, click on the Start menu, navigate to All Programs, and then navigate to Notepad++. 

Configure Notepad++ to indent with spaces

  - Click Settings -> Preferences
  - Find the tab labeled "Language Menu/Tab Settings"
  - Find the box labeled "Replace by space", and make sure it is checked
  - Click Close. 

That's it! Now, you can hit tab to indent your code, and that indentation will actually be made of spaces. This change will help you use spaces consistently, so that Python doesn't get confused about whitespace.
Success!

Now you have an editor that you can use to open any text file, including Python programs. 

Get pip
=======

Right-click on the following link and choose 'Save to file', and save it to a directory of your choice::

  https://raw.github.com/pypa/pip/master/contrib/get-pip.py

Bring up a command prompt, cd into the directory you saved the file in and run the following command::

  python get-pip.py

You will use pip for the next step, which is to install Django


Install Django
==============

This will take several minutes::

  pip install django

That's it!
----------

That's it -- you can now :doc:`move onto the tutorial </intro/tutorial01>`.



